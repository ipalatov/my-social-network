{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/profile/profileInfo/profileInfo.module.css","components/profile/myPosts/myPosts.module.css","components/profile/myPosts/post/post.module.css","components/profile/profileInfo/profileStatusWithHooks.jsx","components/profile/profileInfo/profileInfo.jsx","components/profile/myPosts/post/post.jsx","components/profile/myPosts/newPost/newPostForm.jsx","components/profile/myPosts/myPosts.jsx","components/profile/myPosts/myPostsContainer.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","src","alt","profile_block","photo","photos","large","userPhoto","name","fullName","contacts","facebook","website","vk","twitter","instagram","youtube","github","look_job","lookingForAJobDescription","Post","post","post_text","message","liked","maxLengthCreator10","maxLengthCreator","NewPostForm","onSubmit","handleSubmit","newPost","Field","component","Textarea","type","placeholder","validate","requiredField","newPost__button","MyPosts","postsElements","postData","map","item","id","WithFormNewPostform","reduxForm","form","myPosts","formData","addPost","newPostBody","reset","posts","MyPostsContainer","profilePage","Profile","ProfileContainer","userId","match","params","authorizedUserId","setUserProfile","getUserStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.bac0371c.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />;\n            return <Component {...this.props} />\n\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n\n    return ConnectedAuthRedirectComponent; \n}\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_block\":\"profileInfo_profile_block__3uLBK\",\"photo\":\"profileInfo_photo__rDY5z\",\"name\":\"profileInfo_name__3TJT-\",\"contacts\":\"profileInfo_contacts__3fDYR\",\"status\":\"profileInfo_status__3cswA\",\"look_job\":\"profileInfo_look_job__3MuFI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"myPosts_myPosts__3aNwc\",\"newPost\":\"myPosts_newPost__3Bzbq\",\"newPost__button\":\"myPosts_newPost__button__ImRPF\",\"posts\":\"myPosts_posts__2xQuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__3xCi7\",\"post_text\":\"post_post_text__3-yHt\"};","import React, { useState, useEffect } from 'react';\nimport s from './profileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( ()=> {\n        setStatus(props.status)\n    }, [props.status])\n\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n\n\n    }\n    return (\n\n        <div className={s.status}>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode} > {props.status || '---'} </span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus\n                        onBlur={deactivateEditMode}\n                        value={status}\n                        onChange={onStatusChange}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './profileInfo.module.css';\nimport userPhoto from '../.././../assets/images/user.png'\nimport Preloader from '../../common/preloader/preloader';\nimport ProfileStatusWithHooks from './profileStatusWithHooks';\n\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            <div>\n                <img src='https://static.ngs.ru/news/99/preview/4714ecaebbaf4a7f76cf322e68baad5a149080807_824_549_c.png' alt='MyProfile'></img>\n            </div>\n            <div className={s.profile_block}>\n                <div className={s.photo}>\n                    <img src={profile.photos.large ? profile.photos.large : userPhoto} alt='profile' />\n                </div>\n                <div className={s.name}>\n                    {profile.fullName}\n                </div>\n                <div className={s.contacts}>\n                    <div>Contacts:</div>\n                    <div>{profile.contacts.facebook}</div>\n                    <div>{profile.contacts.website}</div>\n                    <div>{profile.contacts.vk}</div>\n                    <div>{profile.contacts.twitter}</div>\n                    <div>{profile.contacts.instagram}</div>\n                    <div>{profile.contacts.youtube}</div>\n                    <div>{profile.contacts.github}</div>\n                </div>\n               \n               <ProfileStatusWithHooks profile={profile} status={status} updateStatus={updateStatus} />\n\n                <div className={s.look_job}>\n                    <div>\n                        Looking for a job description:\n                    </div>\n                    <div>\n                        {profile.lookingForAJobDescription}\n\n                    </div>\n\n\n                </div>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './post.module.css';\n\nconst Post = (props) => {\n\n    return (\n        <div className={s.post}>\n            <img src='https://www.meme-arsenal.com/memes/bf0296e8bfa92558d0ca180289194068.jpg' alt='avatar'></img>\n            <span className={s.post_text} >{props.message} </span>\n            <div>\n                Liked {props.liked}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Post;","import React from 'react';\nimport s from '../myPosts.module.css';\nimport { Field } from 'redux-form';\nimport { requiredField, maxLengthCreator } from '../../../../utils/validators/validators';\nimport { Textarea } from '../../../common/formsControls/formsControls';\n\nconst maxLengthCreator10 = maxLengthCreator(10);\n\nconst NewPostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit} className={s.newPost}>\n            <div>\n                <Field component={Textarea}\n                    type={'text'}\n                    placeholder='new post'\n                    name={'newPostBody'}\n                    validate={[requiredField, maxLengthCreator10]}\n\n                />\n            </div>\n            <div>\n                <button\n                    className={s.newPost__button}\n                    type={'submit'}\n                >Add post\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default NewPostForm;","import React from 'react';\nimport s from './myPosts.module.css';\nimport Post from './post/post'\nimport NewPostForm from './newPost/newPostForm';\nimport { reduxForm, reset } from 'redux-form';\n\n\n\nconst MyPosts = (props) => {\n\n    let postsElements = props.postData.map(item => <Post id={item.id} message={item.message} liked={item.liked} />);\n\n    const onAddPost = (formData) => {\n        props.addPost(formData.newPostBody);\n        reset()\n    }\n\n    const WithFormNewPostform = reduxForm({\n        form: 'addPost'\n    })(NewPostForm)\n    \n\n\n    return (\n        <div className={s.myPosts}>\n            <h3>My posts:</h3>\n            <WithFormNewPostform onSubmit={onAddPost} />\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;","import { addPost } from '../../../redux/profileReducer';\nimport MyPosts from './myPosts';\nimport { connect } from 'react-redux';\n\n\nconst mstp = (state) => {\n    return {\n        postData:state.profilePage.postData,\n    }\n}\n\n\n\nconst MyPostsContainer = connect(mstp, {addPost})(MyPosts);\nexport default MyPostsContainer;","import React from 'react';\nimport s from './profile.module.css';\nimport ProfileInfo from './profileInfo/profileInfo';\nimport MyPostsContainer from './myPosts/myPostsContainer';\n\nconst Profile = (props) => {\n    \n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </div>\n    )\n\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { addPost, setUserProfile, getUserStatus, updateStatus } from '../../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\nclass ProfileContainer extends Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId ? this.props.match.params.userId : this.props.authorizedUserId;\n        this.props.setUserProfile(userId);\n        this.props.getUserStatus(userId);\n\n    }\n\n\n    render() {\n\n\n        return (\n            <Profile {... this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} /> // разворачиваем все пропсы по аттрибутам и направляем в компоненту Profile\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n\n}\n\n\nexport default compose(\n    connect(mapStateToProps, { addPost, setUserProfile, getUserStatus, updateStatus }),\n    withRouter,\n    withAuthRedirect,\n)(ProfileContainer);\n"],"sourceRoot":""}