{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/profile/profileInfo/profileInfo.module.css","components/profile/myPosts/myPosts.module.css","components/profile/myPosts/post/post.module.css","components/profile/profileInfo/profileStatusWithHooks.jsx","components/profile/profileInfo/profileInfo.jsx","components/profile/myPosts/post/post.jsx","components/profile/myPosts/newPost/newPostForm.jsx","components/profile/myPosts/myPosts.jsx","components/profile/myPosts/myPostsContainer.jsx","components/profile/profile.jsx","components/profile/profileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","isOwner","savePhoto","src","alt","profile_block","photo","photos","large","userPhoto","name","fullName","inputPhoto","type","target","files","length","contacts","facebook","website","vk","twitter","instagram","youtube","github","look_job","lookingForAJobDescription","Post","post","post_text","message","liked","maxLengthCreator10","maxLengthCreator","NewPostForm","onSubmit","handleSubmit","newPost","Field","component","Textarea","placeholder","validate","requiredField","newPost__button","MyPosts","postsElements","postData","map","item","id","WithFormNewPostform","reduxForm","form","myPosts","formData","addPost","newPostBody","reset","posts","MyPostsContainer","profilePage","Profile","ProfileContainer","refreshProfileAndStatus","userId","match","params","authorizedUserId","setUserProfile","getUserStatus","prevProps","prevState","compose","withRouter"],"mappings":"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","file":"static/js/3.70bce5dd.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />;\n            return <Component {...this.props} />\n\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n\n    return ConnectedAuthRedirectComponent; \n}\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_block\":\"profileInfo_profile_block__3uLBK\",\"photo\":\"profileInfo_photo__rDY5z\",\"name\":\"profileInfo_name__3TJT-\",\"contacts\":\"profileInfo_contacts__3fDYR\",\"status\":\"profileInfo_status__3cswA\",\"look_job\":\"profileInfo_look_job__3MuFI\",\"inputPhoto\":\"profileInfo_inputPhoto__yZc-o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"myPosts_myPosts__3aNwc\",\"newPost\":\"myPosts_newPost__3Bzbq\",\"newPost__button\":\"myPosts_newPost__button__ImRPF\",\"posts\":\"myPosts_posts__2xQuF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"post_post__3xCi7\",\"post_text\":\"post_post_text__3-yHt\"};","import React, { useState, useEffect } from 'react';\nimport s from './profileInfo.module.css';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( ()=> {\n        setStatus(props.status)\n    }, [props.status])\n\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n\n\n    }\n    return (\n\n        <div className={s.status}>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode} > {props.status || '---'} </span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus\n                        onBlur={deactivateEditMode}\n                        value={status}\n                        onChange={onStatusChange}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from './profileInfo.module.css';\nimport userPhoto from '../.././../assets/images/user.png'\nimport Preloader from '../../common/preloader/preloader';\nimport ProfileStatusWithHooks from './profileStatusWithHooks';\n\n\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\n    if (!profile) {\n        return <Preloader />\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        }\n\n    }\n\n    return (\n        <div>\n            <div>\n                <img src='https://static.ngs.ru/news/99/preview/4714ecaebbaf4a7f76cf322e68baad5a149080807_824_549_c.png' alt='MyProfile'></img>\n            </div>\n            <div className={s.profile_block}>\n                <div className={s.photo}>\n                    <img src={profile.photos.large ? profile.photos.large : userPhoto} alt='profile' />\n                </div>\n                <div className={s.name}>\n                    {profile.fullName}\n                    <div className={s.inputPhoto}> {isOwner && <input type={'file'} onChange={onMainPhotoSelected} ></input>}</div>\n\n                </div>\n                <div className={s.contacts}>\n                    <div>Contacts:</div>\n                    <div>{profile.contacts.facebook}</div>\n                    <div>{profile.contacts.website}</div>\n                    <div>{profile.contacts.vk}</div>\n                    <div>{profile.contacts.twitter}</div>\n                    <div>{profile.contacts.instagram}</div>\n                    <div>{profile.contacts.youtube}</div>\n                    <div>{profile.contacts.github}</div>\n                </div>\n\n                <ProfileStatusWithHooks profile={profile} status={status} updateStatus={updateStatus} />\n\n                <div className={s.look_job}>\n                    <div>\n                        Looking for a job description:\n                    </div>\n                    <div>\n                        {profile.lookingForAJobDescription}\n\n                    </div>\n\n\n                </div>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport s from './post.module.css';\n\nconst Post = (props) => {\n\n    return (\n        <div className={s.post}>\n            <img src='https://www.meme-arsenal.com/memes/bf0296e8bfa92558d0ca180289194068.jpg' alt='avatar'></img>\n            <span className={s.post_text} >{props.message} </span>\n            <div>\n                Liked {props.liked}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Post;","import React from 'react';\nimport s from '../myPosts.module.css';\nimport { Field } from 'redux-form';\nimport { requiredField, maxLengthCreator } from '../../../../utils/validators/validators';\nimport { Textarea } from '../../../common/formsControls/formsControls';\n\nconst maxLengthCreator10 = maxLengthCreator(10);\n\nconst NewPostForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit} className={s.newPost}>\n            <div>\n                <Field component={Textarea}\n                    type={'text'}\n                    placeholder='new post'\n                    name={'newPostBody'}\n                    validate={[requiredField, maxLengthCreator10]}\n\n                />\n            </div>\n            <div>\n                <button\n                    className={s.newPost__button}\n                    type={'submit'}\n                >Add post\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default NewPostForm;","import React from 'react';\nimport s from './myPosts.module.css';\nimport Post from './post/post'\nimport NewPostForm from './newPost/newPostForm';\nimport { reduxForm, reset } from 'redux-form';\n\n\n\nconst MyPosts = (props) => {\n\n    let postsElements = props.postData.map(item => <Post id={item.id} message={item.message} liked={item.liked} />);\n\n    const onAddPost = (formData) => {\n        props.addPost(formData.newPostBody);\n        reset()\n    }\n\n    const WithFormNewPostform = reduxForm({\n        form: 'addPost'\n    })(NewPostForm)\n    \n\n\n    return (\n        <div className={s.myPosts}>\n            <h3>My posts:</h3>\n            <WithFormNewPostform onSubmit={onAddPost} />\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nexport default MyPosts;","import { addPost } from '../../../redux/profileReducer';\nimport MyPosts from './myPosts';\nimport { connect } from 'react-redux';\n\n\nconst mstp = (state) => {\n    return {\n        postData:state.profilePage.postData,\n    }\n}\n\n\n\nconst MyPostsContainer = connect(mstp, {addPost})(MyPosts);\nexport default MyPostsContainer;","import React from 'react';\nimport s from './profile.module.css';\nimport ProfileInfo from './profileInfo/profileInfo';\nimport MyPostsContainer from './myPosts/myPostsContainer';\n\nconst Profile = ({ isOwner, profile, status, updateStatus, savePhoto }) => {\n\n    return (\n        <div>\n            <ProfileInfo isOwner={isOwner}\n                profile={profile}\n                status={status}\n                updateStatus={updateStatus}\n                savePhoto={savePhoto} />\n            <MyPostsContainer />\n        </div>\n    )\n\n}\n\nexport default Profile;","import React, { Component } from 'react';\nimport Profile from './profile';\nimport { connect } from 'react-redux';\nimport { addPost, setUserProfile, getUserStatus, updateStatus, savePhoto } from '../../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\n\nclass ProfileContainer extends Component {\n\n    refreshProfileAndStatus = () => {\n        let userId = this.props.match.params.userId ? this.props.match.params.userId : this.props.authorizedUserId;\n        this.props.setUserProfile(userId);\n        this.props.getUserStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfileAndStatus()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\n            this.refreshProfileAndStatus()\n        }\n    }\n\n    render() {\n\n\n        return (\n            <Profile {... this.props}\n                isOwner={!this.props.match.params.userId}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n                savePhoto={this.props.savePhoto} /> // разворачиваем все пропсы по аттрибутам и направляем в компоненту Profile\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth,\n    }\n\n}\n\n\nexport default compose(\n    connect(mapStateToProps, { addPost, setUserProfile, getUserStatus, updateStatus, savePhoto }),\n    withRouter,\n    withAuthRedirect,\n)(ProfileContainer);\n"],"sourceRoot":""}