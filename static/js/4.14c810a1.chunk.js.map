{"version":3,"sources":["components/dialogs/dialogs.module.css","hoc/withAuthRedirect.jsx","components/dialogs/Message/message.jsx","components/dialogs/dialogItem/dialogItem.jsx","components/dialogs/dialogForm.jsx","components/dialogs/dialogs.jsx","components/dialogs/dialogsContainer.jsx"],"names":["module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","Message","className","s","message","DialogItem","item","id","item_link","src","img","alt","name","maxLengthCreator50","maxLengthCreator","DialogForm","onSubmit","handleSubmit","add_new_message","add_new_message__block_textarea","Field","component","Textarea","type","add_new_message__textarea","placeholder","validate","requiredField","add_new_message__block_btn","add_new_message__button","WithFormDialogform","reduxForm","form","Dialogs","dialogsElements","dialogsData","map","messagesElements","messagesData","dialogs","dialog_items","dialog_messages","formData","SendMessage","messageBody","compose","dialogsPage","dispatch","action","sendDialogMessageActionCreator"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,OAAS,wBAAwB,UAAY,2BAA2B,gBAAkB,iCAAiC,gBAAkB,iCAAiC,QAAU,yBAAyB,gCAAkC,iDAAiD,0BAA4B,2CAA2C,2BAA6B,4CAA4C,wBAA0B,2C,uICIzkBC,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHT,GACXC,IAAML,WAWtC,OAHqCM,YAAQX,EAARW,CAAyBL,K,uFCNnDM,EARC,SAACJ,GACb,OACI,yBAAKK,UAAWC,IAAEC,SACbP,EAAMO,U,QCeJC,EAjBI,SAACR,GAChB,OACI,yBAAKK,UAAWC,IAAEG,MAEd,kBAAC,IAAD,CAASR,GAAI,YAAcD,EAAMU,IAC7B,yBAAKL,UAAWC,IAAEK,WACd,yBAAKC,IAAKZ,EAAMa,IAAKC,IAAKd,EAAMe,OAChC,6BACKf,EAAMe,U,iCCPzBC,EAAqBC,YAAiB,IA2B7BC,EAxBI,SAAClB,GAChB,OACI,0BAAMmB,SAAUnB,EAAMoB,aAAcf,UAAWC,IAAEe,iBAC7C,yBAAKhB,UAAWC,IAAEgB,iCACd,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACdC,KAAM,OACNX,KAAM,cACNV,UAAWC,IAAEqB,0BACbC,YAAY,oBACZC,SAAU,CAACC,IAAed,MAGlC,yBAAKX,UAAWC,IAAEyB,4BACd,4BAAQL,KAAM,SACVrB,UAAWC,IAAE0B,yBADjB,mB,SCcVC,EAAqBC,YAAU,CACjCC,KAAM,SADiBD,CAExBhB,GAEYkB,EAhCC,SAACpC,GAEb,IAAIqC,EAAkBrC,EAAMsC,YACvBC,KAAI,SAAA9B,GAAI,OAAI,kBAAC,EAAD,CAAYM,KAAMN,EAAKM,KAAML,GAAID,EAAKC,GAAIG,IAAKJ,EAAKI,SACjE2B,EAAmBxC,EAAMyC,aACxBF,KAAI,SAAA9B,GAAI,OAAI,kBAAC,EAAD,CAASF,QAASE,EAAKF,QAASG,GAAID,EAAKC,QAM1D,OAAKV,EAAMN,OAEP,yBAAKW,UAAWC,IAAEoC,SACd,yBAAKrC,UAAWC,IAAEqC,cACbN,GAGL,yBAAKhC,UAAWC,IAAEsC,iBACbJ,GAEL,kBAACP,EAAD,CAAoBd,SAdP,SAAC0B,GAClB7C,EAAM8C,YAAYD,EAASE,iBAGL,kBAAC,IAAD,CAAU9C,GAAG,Y,wBCK5B+C,sBACX7C,aAlBkB,SAACV,GACnB,MAAO,CACH6C,YAAa7C,EAAMwD,YAAYX,YAC/BG,aAAchD,EAAMwD,YAAYR,iBAIf,SAACS,GACtB,MAAO,CACHJ,YAAa,SAACC,GACV,IAAII,EAASC,YAA+BL,GAC5CG,EAASC,QAQjBvD,IAFWoD,CAGbZ","file":"static/js/4.14c810a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__2B_-5\",\"dialog_items\":\"dialogs_dialog_items__2rDHt\",\"item\":\"dialogs_item__36gje\",\"active\":\"dialogs_active__25GoT\",\"item_link\":\"dialogs_item_link__1Xcxc\",\"dialog_messages\":\"dialogs_dialog_messages__135AZ\",\"add_new_message\":\"dialogs_add_new_message__1ha54\",\"message\":\"dialogs_message__1Id2-\",\"add_new_message__block_textarea\":\"dialogs_add_new_message__block_textarea__2W-Ox\",\"add_new_message__textarea\":\"dialogs_add_new_message__textarea__2uZMV\",\"add_new_message__block_btn\":\"dialogs_add_new_message__block_btn__3gLWV\",\"add_new_message__button\":\"dialogs_add_new_message__button__3eToU\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />;\n            return <Component {...this.props} />\n\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n\n    return ConnectedAuthRedirectComponent; \n}\n\n\n\n","import React from 'react';\nimport s from '../dialogs.module.css';\n\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}\n\nexport default Message;","import React from 'react';\nimport s from '../dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\n\nconst DialogItem = (props) => {\n    return (\n        <div className={s.item}>\n\n            <NavLink to={\"/dialogs/\" + props.id}>\n                <div className={s.item_link}>\n                    <img src={props.img} alt={props.name}></img>\n                    <div>\n                        {props.name}\n                    </div>\n\n                </div>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default DialogItem;","import React from 'react';\nimport { Field } from 'redux-form';\nimport s from './dialogs.module.css';\nimport { maxLengthCreator, requiredField } from '../../utils/validators/validators';\nimport { Textarea } from '../common/formsControls/formsControls';\n\nconst maxLengthCreator50 = maxLengthCreator(50);\n\n\nconst DialogForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.add_new_message}>\n            <div className={s.add_new_message__block_textarea} >\n                <Field component={Textarea}\n                    type={'text'}\n                    name={'messageBody'}\n                    className={s.add_new_message__textarea}\n                    placeholder='enter new message'\n                    validate={[requiredField, maxLengthCreator50]}\n                />\n            </div>\n            <div className={s.add_new_message__block_btn}>\n                <button type={'submit'}\n                    className={s.add_new_message__button}\n                > Add message\n                </button>\n            </div>\n        </form>\n\n\n    )\n}\n\nexport default DialogForm;","import React from 'react';\nimport s from './dialogs.module.css';\nimport Message from './Message/message';\nimport DialogItem from './dialogItem/dialogItem';\nimport { Redirect } from 'react-router-dom';\nimport DialogForm from './dialogForm';\nimport { reduxForm } from 'redux-form';\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.dialogsData\n        .map(item => <DialogItem name={item.name} id={item.id} img={item.img} />);\n    let messagesElements = props.messagesData\n        .map(item => <Message message={item.message} id={item.id} />);\n\n    const onAddMessage = (formData) => {\n        props.SendMessage(formData.messageBody);\n    }\n\n    if (!props.isAuth) return <Redirect to='/login' />;\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialog_items}>\n                {dialogsElements}\n\n            </div>\n            <div className={s.dialog_messages}>\n                {messagesElements}\n            </div>\n            <WithFormDialogform onSubmit={onAddMessage} />\n\n        </div>\n    )\n}\n\n\nconst WithFormDialogform = reduxForm({\n    form: 'login'\n})(DialogForm)\n\nexport default Dialogs;","import { sendDialogMessageActionCreator } from '../../redux/dialogsReducer';\nimport Dialogs from './dialogs';\nimport { connect } from 'react-redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsData: state.dialogsPage.dialogsData,\n        messagesData: state.dialogsPage.messagesData,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        SendMessage: (messageBody) => {\n            let action = sendDialogMessageActionCreator(messageBody);\n            dispatch(action);\n        },\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect,\n)(Dialogs);"],"sourceRoot":""}